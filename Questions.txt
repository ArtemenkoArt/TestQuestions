<Databases> :
- Relational and NoSql databases?
- CAP theory
- Relations in relational DB?
- Normal forms ( enough 3 )
- ACID
- Indexes and constraints
- Transactions ( what is it and transaction isolation levels )
- How does JOIN work?
- Basic CRUD queries
- Group By, Order By, Having By 
- SQL Server query execution pipeline
<.NET Section [Common]>:
- What is framework?
- What is the difference between class and object?
- Reference VS Value types
- Nullable types
- Boxing/Unboxing
- Methods of Object class
- What is the difference between string and String?
- Why do we need to determine Equals and GetHashCode?
- What is Hash and for what purpose?
- Shallow Vs Deep Copy ( how to implement Deep copy )
- What is auto-properties and how it works?
- Implicit and explicit casts
- Readonly vs Const
- Operator typeof vs *Object.GetType()
- What the difference between is and as
- What is assembly and from which parts consist of?
- What is OOP? Do we really need it?
- OOP vs Functional paradigm 
- OOP principles with examples
- What are an abstract class and interface and what is the difference in using?
- What can have an abstract class and interface?
- How does Virtual modifier work?
- How does NEW modifier work?
- Overloading and Overriding?
- How does CLR resolve which version of virtual method in hierarchy to call?
- Composition vs Inheritance
- How to wrap external libraries during direct using? ( design pattern Adapter, please have a look )
- How does delegate work?
- What is the difference between Delegate and Event? ( you must know how to write your own event )
- Which design pattern was taken for Events implementation in .Net? ( Publish/ Subscribe )
- Can Interface be substituted by Delegate and vice versa?
- What is Generic and why do we need it?
- Generic constraints
- Generics in interfaces and delegates?
- Variation in Generic parameters
- Immutable types in .net
- How does type string work in .NET?
- Try catch finally ?
- How does using work and  IDisposable interface?
- Garbage collector and how it works?
- Collections
- Generic vs Non-generic
- What is LINQ?
- Fluent and Query syntax
- Differed execution of LINQ queries
- What is the difference between IEnumerable and IQueryable?
- Task asynchronous programming model VS Threads
- How does CLR Thread Pool works?
- Basic mechanisms of synchronization in .NET Threading
- SOLID, KISS, DRY
- Design patterns by GOF ( prepare 1-2 for which type of pattern: creational, structural, behavioral)
<.NET Section [WEB]>:
- YOU SHOULD DEFINITELY UNDERSTAND WHAT HAPPENS WHEN YOU TYPE SOMETHING IN URL address and press ENTER
- What is MVC and how does it work?
- What is the difference between MVC/MVP/MVVM?
- What is the difference between MVC and Web API?
- Application lifecycle
- Http Request lifecycle
- HttpHandlers and HttpModules
- HTTP Verbs and Headers
- Sessions
- Cookies
- Action Filters
- Routing
- ModelBinders
- What is the difference between ASP .NET and .NET Core?
- Javascript ( this and how bind it to the object, hoisting, functional and prototype inheritance, closures, such bullshit like undefined and types in javascript )